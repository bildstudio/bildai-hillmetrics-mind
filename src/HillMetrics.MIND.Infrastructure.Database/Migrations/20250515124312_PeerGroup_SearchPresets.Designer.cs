// <auto-generated />
using System;
using HillMetrics.MIND.Infrastructure.Database.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HillMetrics.MIND.Infrastructure.Database.Migrations
{
    [DbContext(typeof(MindApplicationContext))]
    [Migration("20250515124312_PeerGroup_SearchPresets")]
    partial class PeerGroup_SearchPresets
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.Clients.ClientEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dt_insert");

                    b.Property<DateTime>("DtUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dt_update");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_clients");

                    b.ToTable("clients", (string)null);
                });

            modelBuilder.Entity("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.Clients.ClientFluxPriorityEntity", b =>
                {
                    b.Property<int>("ClientFluxRuleEntityId")
                        .HasColumnType("integer")
                        .HasColumnName("client_flux_rule_entity_id");

                    b.Property<int>("FluxId")
                        .HasColumnType("integer")
                        .HasColumnName("flux_id");

                    b.Property<int>("Priority")
                        .HasColumnType("integer")
                        .HasColumnName("priority");

                    b.HasKey("ClientFluxRuleEntityId", "FluxId")
                        .HasName("pk_clients_flux_priorities");

                    b.ToTable("clients_flux_priorities", (string)null);
                });

            modelBuilder.Entity("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.Clients.ClientFluxRuleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("client_id");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dt_insert");

                    b.Property<DateTime>("DtUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dt_update");

                    b.Property<int>("FinancialDataPointId")
                        .HasColumnType("integer")
                        .HasColumnName("financial_data_point_id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<int>("PeerGroupId")
                        .HasColumnType("integer")
                        .HasColumnName("peer_group_id");

                    b.Property<int>("Ranking")
                        .HasColumnType("integer")
                        .HasColumnName("ranking");

                    b.HasKey("Id")
                        .HasName("pk_clients_flux_rules");

                    b.HasIndex("ClientId")
                        .HasDatabaseName("ix_clients_flux_rules_client_id");

                    b.ToTable("clients_flux_rules", (string)null);
                });

            modelBuilder.Entity("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.PeerGroups.PeerGroupComputationHistoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ComputedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("computed_at");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dt_insert");

                    b.Property<DateTime>("DtUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dt_update");

                    b.Property<int>("PeerGroupId")
                        .HasColumnType("integer")
                        .HasColumnName("peer_group_id");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("StatusDetails")
                        .HasColumnType("text")
                        .HasColumnName("status_details");

                    b.Property<int>("TotalRecords")
                        .HasColumnType("integer")
                        .HasColumnName("total_records");

                    b.HasKey("Id")
                        .HasName("pk_peer_group_computation_history");

                    b.HasIndex("PeerGroupId")
                        .HasDatabaseName("ix_peer_group_computation_history_peer_group_id");

                    b.ToTable("peer_group_computation_history", (string)null);
                });

            modelBuilder.Entity("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.PeerGroups.PeerGroupComputationHistoryResultEntity", b =>
                {
                    b.Property<int>("FinancialId")
                        .HasColumnType("integer")
                        .HasColumnName("financial_id");

                    b.Property<int>("HistoryId")
                        .HasColumnType("integer")
                        .HasColumnName("history_id");

                    b.HasKey("FinancialId", "HistoryId")
                        .HasName("pk_peer_group_computation_history_results");

                    b.HasIndex("HistoryId")
                        .HasDatabaseName("ix_peer_group_computation_history_results_history_id");

                    b.ToTable("peer_group_computation_history_results", (string)null);
                });

            modelBuilder.Entity("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.PeerGroups.PeerGroupEnginesEntity", b =>
                {
                    b.Property<int>("PeerGroupId")
                        .HasColumnType("integer")
                        .HasColumnName("peer_group_id");

                    b.Property<int>("SearchPresetId")
                        .HasColumnType("integer")
                        .HasColumnName("search_preset_id");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dt_insert");

                    b.Property<DateTime>("DtUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dt_update");

                    b.Property<int>("Operator")
                        .HasColumnType("integer")
                        .HasColumnName("operator");

                    b.Property<int>("Order")
                        .HasColumnType("integer")
                        .HasColumnName("order");

                    b.HasKey("PeerGroupId", "SearchPresetId")
                        .HasName("pk_peer_groups_engines");

                    b.HasIndex("SearchPresetId")
                        .HasDatabaseName("ix_peer_groups_engines_search_preset_id");

                    b.ToTable("peer_groups_engines", (string)null);
                });

            modelBuilder.Entity("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.PeerGroups.PeerGroupEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ComputationFrequency")
                        .HasColumnType("integer")
                        .HasColumnName("computation_frequency");

                    b.Property<DateTime>("DtCreate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dt_create");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dt_insert");

                    b.Property<DateTime>("DtUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dt_update");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_peer_groups");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_peer_groups_user_id");

                    b.ToTable("peer_groups", (string)null);
                });

            modelBuilder.Entity("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.Search.SearchPresetEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dt_insert");

                    b.Property<DateTime>("DtUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dt_update");

                    b.Property<string>("Filters")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("filters");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_search_preset");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_search_preset_user_id");

                    b.ToTable("search_preset", (string)null);
                });

            modelBuilder.Entity("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.Users.UserAccountEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DtInsert")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dt_insert");

                    b.Property<DateTime>("DtUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dt_update");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<string>("SId")
                        .HasColumnType("text")
                        .HasColumnName("s_id");

                    b.HasKey("Id")
                        .HasName("pk_user_accounts");

                    b.ToTable("user_accounts", (string)null);
                });

            modelBuilder.Entity("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.Clients.ClientFluxPriorityEntity", b =>
                {
                    b.HasOne("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.Clients.ClientFluxRuleEntity", "ClientFluxRuleEntity")
                        .WithMany("FluxPriorities")
                        .HasForeignKey("ClientFluxRuleEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_clients_flux_priorities_clients_flux_rules_client_flux_rule");

                    b.Navigation("ClientFluxRuleEntity");
                });

            modelBuilder.Entity("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.Clients.ClientFluxRuleEntity", b =>
                {
                    b.HasOne("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.Clients.ClientEntity", "Client")
                        .WithMany("FluxRules")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_clients_flux_rules_clients_client_id");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.PeerGroups.PeerGroupComputationHistoryEntity", b =>
                {
                    b.HasOne("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.PeerGroups.PeerGroupEntity", "PeerGroup")
                        .WithMany("ComputationHistory")
                        .HasForeignKey("PeerGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_peer_group_computation_history_peer_groups_peer_group_id");

                    b.Navigation("PeerGroup");
                });

            modelBuilder.Entity("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.PeerGroups.PeerGroupComputationHistoryResultEntity", b =>
                {
                    b.HasOne("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.PeerGroups.PeerGroupComputationHistoryEntity", "History")
                        .WithMany("ComputationResults")
                        .HasForeignKey("HistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_peer_group_computation_history_results_peer_group_computati");

                    b.Navigation("History");
                });

            modelBuilder.Entity("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.PeerGroups.PeerGroupEnginesEntity", b =>
                {
                    b.HasOne("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.PeerGroups.PeerGroupEntity", "PeerGroup")
                        .WithMany("SearchEngines")
                        .HasForeignKey("PeerGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_peer_groups_engines_peer_groups_peer_group_id");

                    b.HasOne("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.Search.SearchPresetEntity", "SearchPreset")
                        .WithMany("SearchEngines")
                        .HasForeignKey("SearchPresetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_peer_groups_engines_search_presets_search_preset_id");

                    b.Navigation("PeerGroup");

                    b.Navigation("SearchPreset");
                });

            modelBuilder.Entity("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.PeerGroups.PeerGroupEntity", b =>
                {
                    b.HasOne("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.Users.UserAccountEntity", "User")
                        .WithMany("PeerGroups")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_peer_groups_users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.Search.SearchPresetEntity", b =>
                {
                    b.HasOne("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.Users.UserAccountEntity", "User")
                        .WithMany("SearchPresets")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_search_preset_users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.Clients.ClientEntity", b =>
                {
                    b.Navigation("FluxRules");
                });

            modelBuilder.Entity("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.Clients.ClientFluxRuleEntity", b =>
                {
                    b.Navigation("FluxPriorities");
                });

            modelBuilder.Entity("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.PeerGroups.PeerGroupComputationHistoryEntity", b =>
                {
                    b.Navigation("ComputationResults");
                });

            modelBuilder.Entity("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.PeerGroups.PeerGroupEntity", b =>
                {
                    b.Navigation("ComputationHistory");

                    b.Navigation("SearchEngines");
                });

            modelBuilder.Entity("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.Search.SearchPresetEntity", b =>
                {
                    b.Navigation("SearchEngines");
                });

            modelBuilder.Entity("HillMetrics.MIND.Infrastructure.Contracts.Database.Entity.Users.UserAccountEntity", b =>
                {
                    b.Navigation("PeerGroups");

                    b.Navigation("SearchPresets");
                });
#pragma warning restore 612, 618
        }
    }
}
